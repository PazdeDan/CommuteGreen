<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Route Planner</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
        <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
        <link rel="stylesheet" type="text/css" href="CSS/DEFAULT.CSS" id="themeStylesheet">
        <script type="text/javascript">
            function getCookie(name) {
                var nameEQ = name + "=";
                var ca = document.cookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i].replace(/^\s+|\s+$/g, "");
                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
                }
                return null;
            }
            function setCookie(name, value, days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                var expires = "; expires=" + date.toGMTString();
                document.cookie = name + "=" + value + expires + "; path=/";
            }
            function checkParentPage() {
                if (window.top.location.pathname.endsWith("MOBILE.HTM")) {
                    document.getElementById("themeStylesheet").setAttribute("href", "CSS/MOBILE.CSS");
                } else {
                    var darkModeEnabled = getCookie("darkMode") === "true";
                    var stylesheet = darkModeEnabled ? "CSS/ACCESS.CSS" : "CSS/DEFAULT.CSS";
                    document.getElementById("themeStylesheet").setAttribute("href", stylesheet);
                }
            }
            function isValidDateTime(dateTime) {
                var regex = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$/;
                return regex.test(dateTime);
            }
            function displayError(message) {
                var errorDiv = document.getElementById('error');
                errorDiv.innerText = message;
                errorDiv.style.display = 'block';
            }
            function toggleAutomobileOptions() {
                var transportType = document.getElementById('transportType').value;
                var isAutomobile = transportType === 'car' || transportType === 'truck';
                document.getElementById('traffic').style.display = isAutomobile ? 'inline' : 'none';
                document.getElementById('fuelType').style.display = isAutomobile ? 'block' : 'none';
                document.querySelector('label[for="traffic"]').style.display = isAutomobile ? 'inline' : 'none';
                document.querySelector('label[for="fuelType"]').style.display = isAutomobile ? 'block' : 'none';
            }
            function saveTravelDataToCookie(date, startLocation, endLocation, mode, fuelType, distance, duration, co2Emission, ecoScore) {
                var travelData = getCookie("travelData");
                travelData = travelData ? JSON.parse(travelData) : [];
                var newEntry = {
                    date: date,
                    startLocation: startLocation,
                    endLocation: endLocation,
                    mode: mode,
                    fuelType: fuelType,
                    distance: distance,
                    duration: duration,
                    co2Emission: co2Emission,
                    ecoScore: ecoScore
                };
                travelData.push(newEntry);
                setCookie("travelData", JSON.stringify(travelData), 7);
            }
            window.onload = function() {
                checkParentPage();
                toggleAutomobileOptions();
                document.getElementById('transportType').addEventListener('change', toggleAutomobileOptions);
            };
        </script>
    </head>
    <body class="content">
        <h1>Route Planner</h1>
        <form id="routeForm">
            <div>
                <label for="transportType">Transport Type:</label>
                <select id="transportType" name="transportType" class="formui">
                    <option value="car">Car</option>
                    <option value="bicycle">Bicycle</option>
                    <option value="bus">Public Transit</option>
                    <option value="pedestrian">Walking</option>
                    <option value="scooter">Scooter</option>
                    <option value="taxi">Taxi</option>
                    <option value="truck">Truck</option>
                </select>
            </div>
            <label for="traffic" style="display: inline;">Include Traffic:</label>
            <input type="checkbox" id="traffic" name="traffic" class="formui">
            <label for="fuelType">Fuel Type:</label>
            <select id="fuelType" name="fuelType" class="formui">
                <option value="diesel">Diesel</option>
                <option value="petrol">Petrol</option>
                <option value="electric">Electric</option>
                <option value="lpg">LPG</option>
                <option value="cng">CNG</option>
            </select>
            <label for="startLocation">Start Location:</label>
            <input type="text" id="startLocation" name="startLocation" placeholder="Enter starting point" class="formui">
            <label for="endLocation">End Location:</label>
            <input type="text" id="endLocation" name="endLocation" placeholder="Enter destination" class="formui">
            <label for="departureTime">Departure Time:</label>
            <input type="text" id="departureTime" name="departureTime" placeholder="YYYY-MM-DDTHH:MM:SS" class="formui">
            <p id="privacy"><i>By clicking the button below you agree to <a href="https://legal.here.com/en-gb/privacy">Here Technologies' Privacy Policy</a>.</i></p>
            <input type="submit" id="button" value="Calculate Route" class="formui">
        </form>
        <div id="error" style="display:none; color:red;"></div>
        <div id="results">
            <h2>Eco-Friendliness Results</h2>
            <p>Eco-Score:</p>
            <div class="result-bar">
                <span id="ecoScoreBar" class="eco-score"></span>
            </div>
            <p>Distance:</p>
            <div class="result-bar">
                <span id="distanceBar" class="distance"></span>
            </div>
            <p>Duration:</p>
            <div class="result-bar">
                <span id="durationBar" class="duration"></span>
            </div>
            <p>CO2 Emissions:</p>
            <div class="result-bar">
                <span id="co2EmissionBar" class="co2-emission"></span>
            </div>
            <p>Fuel Consumption:</p>
            <div class="result-bar">
                <span id="fuelConsumptionBar" class="fuel-consumption"></span>
            </div>
        </div>
        <script type="text/javascript">
            document.getElementById('routeForm').onsubmit = function(event) {
                event.preventDefault();
                var apiKey = getCookie('apiKey');
                var startLocation = document.getElementById('startLocation').value;
                var endLocation = document.getElementById('endLocation').value;
                var departureTime = document.getElementById('departureTime').value;
                var fuelType = document.getElementById('fuelType').value;
                var includeTraffic = document.getElementById('traffic').checked;
                document.getElementById('error').style.display = 'none';
                function getGeocode(location, callback) {
                    var xhr = new XMLHttpRequest();
                    xhr.open('GET', 'https://geocode.search.hereapi.com/v1/geocode?q=' + encodeURIComponent(location) + '&apiKey=' + apiKey, true);
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState == 4) {
                            if (xhr.status == 200) {
                                var data = JSON.parse(xhr.responseText);
                                if (data.items && data.items.length > 0) {
                                    callback(data.items[0].position);
                                } else {
                                    displayError('Geocoding error: Location not found.');
                                }
                            } else {
                                displayError('Geocoding error: ' + xhr.statusText);
                            }
                        }
                    };
                    xhr.onerror = function() {
                        displayError('Geocoding request failed.');
                    };
                    xhr.send();
                }
                function getRoute() {
                    getGeocode(startLocation, function(startCoords) {
                        getGeocode(endLocation, function(endCoords) {
                            var routeURL = 'https://router.hereapi.com/v8/routes?origin=' + startCoords.lat + ',' + startCoords.lng + '&destination=' + endCoords.lat + ',' + endCoords.lng + '&return=summary&transportMode=' + document.getElementById('transportType').value;
                            if (departureTime && isValidDateTime(departureTime)) {
                                routeURL += '&departureTime=' + departureTime;
                            } else {
                                routeURL += '&departureTime=any';
                            }
                            if (includeTraffic) {
                                routeURL += '&traffic[mode]=enabled';
                            } else {
                                routeURL += '&traffic[mode]=disabled';
                            }
                            if (document.getElementById('transportType').value === 'car' || document.getElementById('transportType').value === 'truck') {
                                if (fuelType === 'electric') {
                                    routeURL += '&fuel[type]=petrol';
                                } else {
                                    routeURL += '&fuel[type]=' + fuelType;
                                }
                                routeURL += '&fuel[freeFlowSpeedTable]=10,0.095,20,0.072,30,0.058,40,0.049,50,0.045,60,0.043,70,0.042,80,0.043,90,0.045,100,0.047,110,0.05,120,0.052,130,0.055&fuel[trafficSpeedTable]=10,0.012,20,0.09,30,0.07,40,0.06,50,0.045,60,0.043,70,0.042,80,0.043,90,0.045,100,0.047,110,0.05,120,0.052,130,0.055&fuel[additionalConsumption]=0.1&fuel[ascent]=0.1';
                            }
                            routeURL += '&apiKey=' + apiKey;
                            console.log('Request URL:', routeURL); // Log the request URL for debugging
                            var xhr = new XMLHttpRequest();
                            xhr.open('GET', routeURL, true);
                            xhr.onreadystatechange = function() {
                                if (xhr.readyState == 4) {
                                    if (xhr.status == 200) {
                                        var routeData = JSON.parse(xhr.responseText);
                                        console.log('Route Data:', routeData); // Log the routeData for debugging
                                        if (routeData.routes && routeData.routes.length > 0 && routeData.routes[0].sections && routeData.routes[0].sections.length > 0 && routeData.routes[0].sections[0].summary) {
                                            var ecoScore = calculateEcoScore(routeData);
                                            var distance = (routeData.routes[0].sections[0].summary.length / 1000).toFixed(1);
                                            var duration = (routeData.routes[0].sections[0].summary.duration / 60).toFixed(1);
                                            var mode = routeData.routes[0].sections[0].transport.mode;
                                            var date = new Date().toLocaleDateString();
                                            if (fuelType === 'electric') {
                                                var co2Emission = 0;
                                                var fuelConsumption = 0;
                                            } else {
                                                var co2Emission = routeData.routes[0].sections[0].summary.co2Emission ? routeData.routes[0].sections[0].summary.co2Emission.toFixed(1) : 0;
                                                var fuelConsumption = routeData.routes[0].sections[0].summary.consumption ? routeData.routes[0].sections[0].summary.consumption.toFixed(1) : 0;
                                            }
                                            // Update graphical representation
                                            updateResultBar('ecoScoreBar', ecoScore, 100);
                                            updateResultBar('distanceBar', distance, 1280);
                                            updateResultBar('durationBar', duration, 1440);
                                            updateResultBar('co2EmissionBar', co2Emission, 1000);
                                            updateResultBar('fuelConsumptionBar', fuelConsumption, 100);
                                            saveTravelDataToCookie(date, startLocation, endLocation, mode, fuelType, distance, duration, co2Emission, ecoScore);
                                        } else {
                                            displayError('Routing error: Unexpected response structure.');
                                        }
                                    } else {
                                        displayError('Routing error: ' + xhr.statusText);
                                    }
                                }
                            };
                            xhr.onerror = function() {
                                displayError('Routing request failed.');
                            };
                            xhr.send();
                        });
                    });
                }
                getRoute();
            };
            function updateResultBar(barId, value, maxValue) {
                var bar = document.getElementById(barId);
                var percentage = (value / maxValue) * 100;
                if (percentage > 100) {
                    percentage = 100;
                }
                bar.style.width = percentage + '%';
                bar.innerText = value;
            }
            function calculateEcoScore(routeData) {
                if (!routeData || !routeData.routes || !routeData.routes[0] || !routeData.routes[0].sections || !routeData.routes[0].sections[0] || !routeData.routes[0].sections[0].summary || !routeData.routes[0].sections[0].summary.length) {
                    return "N/A";
                }
                var distance = routeData.routes[0].sections[0].summary.length / 1000;
                var transportType = document.getElementById('transportType').value;
                var fuelType = document.getElementById('fuelType').value;
                var score = 100;
                if (transportType === 'car' || transportType === 'taxi' || transportType === 'truck') {
                    score -= 40;
                } else if (transportType === 'bus' || transportType === 'scooter') {
                    score -= 20;
                } else if (transportType === 'bicycle' || transportType === 'pedestrian') {
                    score += 0;
                }
                if (fuelType === 'diesel') {
                    score -= 20;
                } else if (fuelType === 'petrol') {
                    score -= 15;
                } else if (fuelType === 'lpg') {
                    score -= 10;
                } else if (fuelType === 'cng') {
                    score -= 5;
                } else if (fuelType === 'electric') {
                    score += 0;
                }
                if (distance > 1280) {
                    score -= 40;
                } else if (distance > 0) {
                    score -= Math.round(5 * (Math.log(distance / 10) / Math.log(2)));
                }
                return score;
            }
        </script>
    </body>
</html>
